给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_map<int, bool> used;
        for(int i = 0; i < nums.size(); i++) {
            used[nums[i]] = false;
        }
        int longest = 0;
        for(int i = 0; i < nums.size(); i++) {
            if(used[nums[i]]) {
                continue;
            }
            int length = 1;
            used[nums[i]] = true;
            for(int j = nums[i] + 1; used.find(j) != used.end(); ++j) {
                used[j] = true;
                ++length;
            }
            for(int j = nums[i] - 1; used.find(j) != used.end(); --j) {
                used[j] = true;
                ++length;
            }
            longest = max(longest, length);
        }
        return longest;
    }
};
